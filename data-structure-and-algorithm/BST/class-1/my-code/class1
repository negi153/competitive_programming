inorder traversal of binary search tree is always in sorted order

class 1 -> 
create bst. --> done
traverse bst --> done by level order traversal, inorder,preorder,postorder
search element in bst --> done
max in bst--> done
min in bst --> done
inorder successor/predecessor --> remaining
    inorder predecessor of k-> left subtree of k element ka max value -> exception : when element is leaf
    inorder successor of k-> min value of right subtree of elemetn k exception : when element is leaf

deletion in bst --> done